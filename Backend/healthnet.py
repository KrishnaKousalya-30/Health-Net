# -*- coding: utf-8 -*-
"""HealthNet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qW8XR5l2_mFeztEjFTpia1YKykcs-5aZ
"""

!sudo apt install tesseract-ocr
!pip install pytesseract

from PIL import Image
import pytesseract
import pytesseract
import shutil
import os
import random

# Load the image
image = Image.open('/content/Testing_Image.jpg')

# Perform OCR
#extracted_text = pytesseract.image_to_string(image)
extracted_text = pytesseract.image_to_string(image, lang='eng', config='--psm 6')

# Print the extracted text
print(extracted_text)

import re
text = extracted_text
# Define the pattern to match "Operation performed: Value"
pattern = r"Operation performed:\s*(.*)"
# Search for the pattern in the text
match = re.search(pattern, text)
if match:
    operation_performed = match.group(1)
    R=operation_performed
    S=R.upper()
    print("Operation performed:", S)
else:
    print("Operation performed information not found.")

import pandas as pd

# Replace 'your_file.xlsx' with the path to your Excel file
file_path = '/content/Package_Name.xlsx'

# Read the Excel file into a DataFrame
df = pd.read_excel(file_path)

# Display the DataFrame
print(df.head(10))

import pandas as pd

# Specify the operation performed name
operation_performed_name = S  # Replace this with your operation performed name

# Filter the dataframe for rows where 'PACKAGE NAME' contains the operation performed name
filtered_df1 = df[df['PACKAGE NAME'].str.contains(operation_performed_name)]

# Print the filtered dataframe
if not filtered_df1.empty:
    print(f"All rows related to '{operation_performed_name}':")
    print(filtered_df1)
else:
    print(f"No rows found related to '{operation_performed_name}'")

filtered_df1

import pandas as pd

file_path = '/content/District_Names.xlsx'

# Read the Excel file into a DataFrame
df = pd.read_excel(file_path)

# Get user input for district name
user_district = input("Enter the district name: ")

# Filter dataframe based on user input
filtered_df = df[df['DISTRICT NAME'] == user_district]

# Print hospital names if district matches
if not filtered_df.empty:
    print("Hospitals in", user_district)
    for index, row in filtered_df.iterrows():
        print(row['HOSPITAL NAME'])

    # Get user input for selected hospital name
    selected_hospital = input("Select a hospital name: ")

    # Filter dataframe based on selected hospital name
    selected_df = filtered_df[filtered_df['HOSPITAL NAME'] == selected_hospital]

    # Print hospital name and grade if hospital matches
    if not selected_df.empty:
        print("Hospital_Name:-------->",selected_df.iloc[0]['HOSPITAL NAME'], "Grade of the hospital:---------->",selected_df.iloc[0]['GRADE'])
    else:
        print("Hospital not found")
else:
    print("No hospitals found in", user_district)

r1=("Hospital_Name:",selected_df.iloc[0]['HOSPITAL NAME'], "Grade of the hospital:",selected_df.iloc[0]['GRADE'])
r1
json_file_path = 'hospital_data.json'
with open(json_file_path, 'w') as json_file:
    json.dump(r1, json_file, indent=4)
print(f"Hospital data saved to {json_file_path}")

import json

# Open the JSON file
with open('/content/hospital_data.json', 'r') as file:
    data = json.load(file)
print(data[3])
# 'data' now contains the content of the JSON file

filtered_df1

df=filtered_df1

# Assuming your DataFrame is named 'df'
a4_values = df[data[3]]
print("Insurance_Value:",a4_values)

[Hospital: KANAGAMANI HOSPITAL, RAMANATHAPURAM TN.,
       Insurance: 168000,
       Location: RAMANATHAPURAM,
       Operation:THERAPEUTIC ABDOMINAL SURGERY]

Hospital_info=[]
Hospital_info.append(selected_df.iloc[0]['HOSPITAL NAME'])
Hospital_info.append(a4_values)
Hospital_info.append(user_district)
Hospital_info.append(S)

print(Hospital_info)

